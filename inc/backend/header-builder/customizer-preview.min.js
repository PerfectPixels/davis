!function(e){var t=wp.customize,n={syncDropAreas:function(){e(".header-builder .sortable").each(function(){var n=e(this).data("setting");void 0!==n&&void 0!==t.instance(n)&&t.instance(n).get()&&t.instance(n).get().forEach(function(t){var i="desktop";n.indexOf("tablet")>-1?i="tablet":n.indexOf("mobile")>-1&&(i="mobile"),e("#header-"+i+" .unused").find("[data-type="+t+"]").appendTo(".header-builder [data-setting="+n+"]")})})},makeSortable:function(){e(".header-builder .sortable").sortable({connectWith:".sortable",update:function(e,t){n.updateCustomizer(t)}}).disableSelection()},updateCustomizer:function(t){var i=null!==t.item?e(t.item).parent():t.container,a=i.data("setting"),o=[];null!==t.sender&&(i=e(t.sender),a=i.data("setting")),void 0!==a&&(i.find("span.button").each(function(){o.push(e(this).data("type"))}),n.updateSetting(a,o,"select"))},updateSetting:function(n,i,a){var o=e("[data-customize-setting-link="+n+"]");switch(a){case"switch":i="true"===i,o.prop("checked",i);break;case"radio":e("#"+n+i).prop("checked",!0);break;case"select":o.selectize()[0].selectize.setValue(i,!0);break;default:o.val(i)}t.instance(n).set(i)},updateAllArea:function(t){t.find(".sortable").each(function(){var t=e(this),i=(t.data("setting"),{container:t,item:null,sender:null});n.updateCustomizer(i)})},addTitlePanel:function(){var t=["accordion-section-top_bar","accordion-section-account_element"];t.forEach(function(t){var n=e("#sub-"+t+" .customize-section-description");e('<h3 class="section_title in-panel">'+n.text()+"</h3>").insertBefore(e("#"+t)),n.remove()})},goToSetting:function(){e("[data-section]").on("click",function(){var n=e(this).data("section");t.section(n)&&t.section(n).focus()})},deviceViews:function(){e(".header-builder .devices button").on("click",function(){var t=e(this).data("device");e("#customize-controls").find("button.preview-"+t).click()})},presetsView:function(){e(".header-builder .presets-button").on("click",function(){var t=e(this);t.toggleClass("button-primary"),e("#header-presets").toggleClass("active")})},selectPreset:function(){e("#header-presets").on("click","img",function(){var t=e(this),i=t.data("logo").split(","),a=t.data("content-pos"),o=t.data("elements").split(/\[(.*?)\]/),s=t.data("options").split(/\[(.*?)\]/),c=o.filter(function(e){return""!=e}),d=["desktop","tablet"],l=0;t.hasClass("active")||(t.addClass("active").siblings().removeClass("active"),d.forEach(function(t){e("#header-"+t).find("ul:not(.unused) .elements").each(function(){var t=e(this),n=t.closest(".customize-pane-content").find(".unused .sortable");t.appendTo(n)}),n.updateSetting("logo_position_"+t,i[l++],"select")}),c.forEach(function(t){var n=t.split(":"),i=e(".header-builder [data-setting="+n[0]+"]"),a=n[1].split(",");a.forEach(function(e){i.closest(".customize-pane-content").find(".unused [data-type="+e+"]").appendTo(i)})}),s.forEach(function(e){var t=e.split(":");e.length>0&&n.updateSetting(t[1],t[2],t[0])}),d.forEach(function(t){n.updateAllArea(e("#header-"+t))}),n.updateSetting("content_pos",a,"select"))})},displayHB:function(){t.panel("panel_header").expanded.bind(function(t){t===!0&&e(".header-builder").addClass("open")}),e(".collapse-builder").on("click",function(){e(".header-builder").toggleClass("open")})},logoPos:function(){var i=["desktop","tablet","mobile"];i.forEach(function(i){t("logo_position_"+i,function(t){t.bind(function(t){var a=e("#header-"+i),o="desktop"===i?"":"_"+i;a.removeClass("center_logo_split_menu left_logo"+o+" center_logo"+o).addClass(t),"center_logo_split_menu"===t&&"desktop"===i&&(a.find(".unused .sortable").append(a.find("[data-type=main_menu]")),n.updateAllArea(a))})})})},init:function(){n.syncDropAreas(),n.makeSortable(),n.addTitlePanel(),n.goToSetting(),n.deviceViews(),n.displayHB(),n.logoPos(),n.presetsView(),n.selectPreset()}};e(document).ready(n.init)}(jQuery);
//# sourceMappingURL=data:application/json;base64,
